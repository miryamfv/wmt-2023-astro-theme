---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <meta
      name="description"
      content="[ WMT ] - Digital Boutique - Your guests' experience starts online"
    />
    <title>[ WMT ] - {title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600&family=Raleway:wght@300;400;500;600&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="overflow-y-auto bg-body">
    <Navbar />
    <slot />
    <Footer />
  </body>
  <script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]",
    ) as HTMLButtonElement;

    const elements = document.getElementsByClassName("bg-gradient-to-tr"),
      elementsArray = Array.from(elements);

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");

      if (elementsArray.length > 0) {
        elementsArray.forEach(function (element) {
          element.classList.add("dark");
        });
      }
    } else {
      document.documentElement.classList.remove("dark");

      if (elementsArray.length > 0) {
        elementsArray.forEach(function (element) {
          element.classList.remove("dark");
        });
      }
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;

        if (elementsArray.length > 0) {
          elementsArray.forEach(function (element) {
            element.classList.remove("dark");
          });

          if (doc) {
            if (localStorage.getItem("appTheme")) {
              if (localStorage.getItem("appTheme") === "light") {
                doc.classList.add("dark");

                if (elementsArray.length > 0) {
                  elementsArray.forEach(function (element) {
                    element.classList.add("dark");
                  });

                  localStorage.setItem("appTheme", "dark");
                }
              } else {
                document.documentElement.classList.remove("dark");
                localStorage.setItem("appTheme", "light");
              }
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");

              // Check if there are elements with the class "bg-gradient-to-tr"
              if (elementsArray.length > 0) {
                // Add the class "dark" to each element
                elementsArray.forEach(function (element) {
                  element.classList.remove("dark");
                });
                localStorage.setItem("appTheme", "light");
              }
            } else {
              doc.classList.add("dark");

              // Check if there are elements with the class "bg-gradient-to-tr"
              if (elementsArray.length > 0) {
                // Add the class "dark" to each element
                elementsArray.forEach(function (element) {
                  element.classList.add("dark");
                });
                localStorage.setItem("appTheme", "dark");
              }
            }
          }
        }
      });
    }
  </script>
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]",
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]",
    ) as HTMLDivElement;
    if (toggleMenu) {
      toggleMenu.addEventListener("click", (e) => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
          navbar.style.height = `${navbar.scrollHeight}px`;
        } else {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        }
      });

      navbar.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });

      overlayNav.addEventListener("click", () => {
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });
    }
  </script>
  <script>
    const spans = document.querySelectorAll("a.logo span");
    const numLetters = spans.length;
    spans.forEach(function (span, i) {
      const mappedIndex = i - numLetters / 2;
      span.style.animationDelay = mappedIndex * 0.25 + "s";
    });
  </script>
</html>
<style is:global>
  :root {
    --color-bg: 249 248 246;
    --color-border: 40 57 65;
    --color-box: 249 248 246;
    --box-border: 229 231 235;
    --box-sd: 226 232 240 / 0.5;
    --heading-1: 40 57 65;
    --heading-2: 40 57 65;
    --heading-3: 32 85 86;
    --primary: 182 236 68;
  }

  .dark {
    --color-bg: 40 57 65;

    --color-box: 17 24 39;
    --box-border: 243 244 246/0.1;
    --box-sd: transparent;

    --heading-1: 249 248 246;
    --heading-2: 243 244 246;
    --heading-3: 209 213 219;
    --primary: 234, 88, 249;
  }

  .dark > .bg-from-color,
  .dark.bg-from-color {
    --tw-gradient-from: #111827 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  .bg-from-color {
    --tw-gradient-from: #f3f4f6 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --color-bg: 40 57 65;
      --color-box: 17 24 39;
      --box-border: 243 244 246/0.1;
      --box-sd: transparent;

      --heading-1: #f9f8f6;
      --heading-2: #f9f8f6;
      --heading-3: 209 213 219;
      --primary: 234, 88, 249;
      --bg-gradient-from: #111827;
    }

    .bg-from-color {
      --tw-gradient-from: #111827 var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
    }
  }

  .btn {
    border-radius: 4px;
    background-color: #5ad1d2;
    color: rgba(249, 248, 246);
    display: block;
    padding: 0.7em;
    /*    width: 75%;*/
    transition: all 0.6s;
    margin-top: auto;
    align-self: center;
  }
  .btn:focus,
  .btn:hover {
    background-color: #283941;
    text-decoration: none;
  }
  .dark .btn:focus,
  .dark .btn:hover {
    color: rgba(249, 248, 246);
    color: #283941;
  }
  a.btn svg {
    fill: #fff;
  }

  .dark .btn {
    background-color: #ea58f9;
  }

  .text-button {
    color: rgba(40, 57, 65);
  }

  .text-button:hover {
    color: rgba(249, 248, 246);
  }
  html {
    scroll-behavior: smooth;
  }
  body {
    font-family: "Raleway", sans-serif;
  }

  h1,
  h2,
  h3 {
    font-family: "Kanit", sans-serif;
  }
  a.logo {
    font-family: "Raleway", sans-serif;
  }

  h1 {
    line-height: 1;
  }

  a.logo {
    margin: 0;
    font-size: 1.2rem;

    background-color: #ea58f9;
    background-image: linear-gradient(0deg, #ea58f9 90%, rgba(var(--color-bg)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    -moz-background-clip: text;
    -moz-text-fill-color: transparent;

    --wght-min: 182;
    --wght-max: 650;
  }

  a.logo > span {
    animation: breath 1.5s alternate ease-in-out;
    animation-iteration-count: infinite;
    animation-delay: 1s;
    animation-fill-mode: both;
  }

  a.logo:hover > span,
  a.logo:focus > span {
    animation-play-state: paused;
  }

  @keyframes breath {
    0% {
      font-variation-settings: "wght" var(--wght-min);
    }
    100% {
      font-variation-settings: "wght" var(--wght-max);
    }
  }
  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }

  @keyframes reveal {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @supports (animation-timeline: view()) {
    @keyframes anim-lineUp {
      0% {
        opacity: 0;
        transform: translateY(80%);
      }
      20% {
        opacity: 0.5;
      }
      50% {
        opacity: 0.8;
        transform: translateY(0%);
      }
      100% {
        opacity: 1;
        transform: translateY(0%);
      }
    }

    section:first-of-type h1,
    section:first-of-type p,
    section:first-of-type img,
    section:first-of-type {
      animation-name: anim-lineUp;
      transiton: all 0.4s ease;
      animation-duration: 2s;
      animation-delay: 0.4s;
    }

    .lineUp {
      view-timeline-name: --revealing-title;
      view-timeline-axis: block;
      animation: anim-lineUp ease-out both;
      animation-timeline: --revealing-title;
      animation-range: entry 25% cover 70%;
    }
  }

  .short-col {
    justify-content: center;
  }

  .bgdetail {
    z-index: -1;
  }
</style>
