---
export interface Props {
    href: string;
    text: string;
    className?: string;
    variant: "primary" | "secondary";
}

const { href, text, className, variant } = Astro.props;

const getThemeStyle = (variant: "primary" | "secondary") => {
    if (variant === "primary") {
        return "bg-primary border-transparent relative after:bg-[#172554] hover:border-[#172554]";
    }
    return "text-primary";
};

const getTextColor = (variant: "primary" | "secondary") => {
    if (variant === "primary") {
        return "text-white-400";
    }
    return "text-button";
};
---

<a
    href={href}
    class={`px-6 py-3 rounded-full outline-none relative overflow-hidden border duration-300 ease-linear text-button
                    after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0 after:bg-[#172554]
                    ${getThemeStyle(
                        variant,
                    )} hover:after:opacity-100 hover:after:scale-[2.5] ${className}`}
>
    <span class={`relative z-10`}>
        {text}
    </span>
</a>
